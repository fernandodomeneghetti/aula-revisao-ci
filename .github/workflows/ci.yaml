name: ci
run-name: Pipeline de integração contínua e analise de Código
on:
    push:
        branches:
            - main

jobs:
    cd:
        name: deploy
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4
              with:
                fetch-depth: 0  
            
           # - uses: SonarSource/sonarqube-scan-action@v5
           #   env:
           #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
           #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
           #   with:
           #     args: >
           #         -Dsonar.projectKey=site-faculdade
           #         -Dsonar.projectName=site-faculdade
           #         -Dsonar.projectVersion=1.0
           #         -Dsonar.sources=.
           
           
            - name: Docker Login
              # You may pin to the exact commit or the version.
              # uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772
              uses: docker/login-action@v3.4.0
              with:
                username: ${{ secrets.DOCKERHUB_USER }}
                password: ${{ secrets.DOCKERHUB_PASSWORD }} 

            - name: Build and push Docker images
              # You may pin to the exact commit or the version.
              # uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4
              uses: docker/build-push-action@v6.15.0
              with:
                  context: .
                  file: ./Dockerfile
                  push: true
                  tags: domeneghetti/aula-ci:latest
            
            - name: Azure WebApp
              uses: Azure/webapps-deploy@v3.0.1
              with:
                # Name of the Azure Web App
                app-name: site-aula-ci-devops
                publish-profile: ${{ secrets.PUBLISH_PROFILE }} # optional
                image: domeneghetti/aula-ci:latest
                # Enter an existing Slot other than the Production slot
                # Applies to Web App only: Path to package or folder. *.zip, *.war, *.jar or a folder to deploy
                # package: . # optional, default is .
                # Applies to Web App Containers only: Specify the fully qualified container image(s) name. For example, 'myregistry.azurecr.io/nginx:latest' or 'python:3.7.2-alpine/'. For multi-container scenario multiple container image names can be provided (multi-line separated)
                # Applies to Web App Containers only: Path of the Docker-Compose file. Should be a fully qualified path or relative to the default working directory. Required for multi-container scenario
                #restart: true
